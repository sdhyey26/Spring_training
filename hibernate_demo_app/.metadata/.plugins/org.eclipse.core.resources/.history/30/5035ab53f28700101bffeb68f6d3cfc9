package com.tss.Service;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.tss.Dto.CourseResponseDto;
import com.tss.Dto.InstructorRequestDto;
import com.tss.Dto.InstructorResponseDto;
import com.tss.Entity.Course;
import com.tss.Entity.Instructor;
import com.tss.Repository.InstructorRepository;

import jakarta.transaction.Transactional;

@Service
public class InstructorServiceImpl implements InstructorService{

    @Autowired
    private InstructorRepository instructorRepository;

    @Autowired
    private ModelMapper modelMapper;

    @Override
    public InstructorResponseDto addInstructor(InstructorRequestDto instructorRequestDto) {
        Instructor instructor = modelMapper.map(instructorRequestDto, Instructor.class);

        Instructor savedInstructor = instructorRepository.save(instructor);

        return modelMapper.map(savedInstructor, InstructorResponseDto.class);
    }

    @Override
    @Transactional
    public CourseResponseDto assignCourseToInstructor(Long instructorId, Long courseId) {

        Instructor instructor = instructorRepository.findById(instructorId)
                .orElseThrow(() -> new RuntimeException("Instructor not found with ID: " + instructorId));

        Course course = courseRepository.findById(courseId)
                .orElseThrow(() -> new RuntimeException("Course not found with ID: " + courseId));

        course.setInstructor(instructor);

        // Save the updated course
        Course updatedCourse = courseRepository.save(course);

        // Map to response DTO
        CourseResponseDto responseDto = modelMapper.map(updatedCourse, CourseResponseDto.class);
        responseDto.setInstructorName(instructor.getName());

        return responseDto;
    }
}
